/**
\page page_faq Frequently asked questions

@brief Hopefully, this is where you'll have your questions answered ;)

### I like nstBASIC! Can I use it in projects of mine?

I'm glad you like it and since you are so kind, of course you can use it. No, really!
You can use nstBASIC in any project, as long as you respect the terms of the licence (GLP v3).

### ...But is it possible?

Definetelly yes! It might not be easy though. On the one hand, if your project is based on some
AVR microcontroller, your job will be very easy. Chances are that you'll only have to tweak some
pin definitions and / or a few memory addresses. On the other hand, if you intend to port nstBASIC
to some other microcontroller or to an altogether different platform, be prepared for a lot of work!
You'll have to rewrite every function in io.c. You'll also have to replace every function, macro
and constant supplied by avr-libc (sei, cli, pgm_read_byte and so on).

### Is there already a port for some other microcontroller?

None that I know of! If you just created one, or you happen to know somebody who did,
drop me a line, so that I can update this answer.

### Is there an easy way to add my own commands?

Yes, there is! In general terms you have to take the following steps:
- Add the desired keyword in \c commands table (parser.c).
- Add a respective entry in the \c COMMANDS enumerator (parser.h).
- Write the functions that implement your command.
- Add the corresponding section in the large switch statement, in the execution() function
  (interpreter.c).

Keep in mind that the new entry in the table (\c commands) and the new entry in the enumerator
(\c COMMANDS) should be at exactly the same position. Since neither the table nor the enumarator
is sorted, you can always add the new entries at the beginning of both constructs. Do not put the
new entries at the end of the table and the enumerator! The last member of the enumerator
corresponds no keyword.
*/
